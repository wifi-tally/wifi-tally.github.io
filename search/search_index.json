{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Open Source Tally Light \u00b6 Wifi Tally is an Open Source Wifi Tally Light based on the ESP8266. It aims to be affordable without sacrificing reliability and works with most common video mixers. Its architecture uses a central Hub that connects the tallies to the video mixer and allows easy configuration and monitoring. uses icons from the Noun Project by Eucalyp , Atif Arshad , Hrbon and ProSymbols , all licensed CC-BY-3.0 Features \u00b6 WiFi Tally Light based on the ESP8266 Hardware costs of about 10\u20ac flexible USB power (battery pack, camera outlet, stationary) Fast communication and lightweight protocol uses a central Hub to communicate, that allows easy monitoring utilizes your local network and access points support for RGB Leds (anode, cathode), WS2812, NeoPixel, etc Open Source / Open Hardware Supported Video Mixers \u00b6 Blackmagic Design ATEM OBS Studio ) vMix Info Please open an issue if you want others to be supported too. It is really simple to integrate them and the only reason they have not been integrated yet, is that nobody has needed it already. :D Get Started \u00b6 Refer to Getting Started to start running your own Wifi Tally. Download \u00b6 See the download page .","title":"Open Source Tally Light"},{"location":"index.html#open-source-tally-light","text":"Wifi Tally is an Open Source Wifi Tally Light based on the ESP8266. It aims to be affordable without sacrificing reliability and works with most common video mixers. Its architecture uses a central Hub that connects the tallies to the video mixer and allows easy configuration and monitoring. uses icons from the Noun Project by Eucalyp , Atif Arshad , Hrbon and ProSymbols , all licensed CC-BY-3.0","title":"Open Source Tally Light"},{"location":"index.html#features","text":"WiFi Tally Light based on the ESP8266 Hardware costs of about 10\u20ac flexible USB power (battery pack, camera outlet, stationary) Fast communication and lightweight protocol uses a central Hub to communicate, that allows easy monitoring utilizes your local network and access points support for RGB Leds (anode, cathode), WS2812, NeoPixel, etc Open Source / Open Hardware","title":"Features"},{"location":"index.html#supported-video-mixers","text":"Blackmagic Design ATEM OBS Studio ) vMix Info Please open an issue if you want others to be supported too. It is really simple to integrate them and the only reason they have not been integrated yet, is that nobody has needed it already. :D","title":"Supported Video Mixers"},{"location":"index.html#get-started","text":"Refer to Getting Started to start running your own Wifi Tally.","title":"Get Started"},{"location":"index.html#download","text":"See the download page .","title":"Download"},{"location":"download.html","text":"Download \u00b6 Warning We use semantic versioning . This means We believe the code is stable enough to be used for production everything before version 1.0.0 could be changed at any time without prior notice. You should expect pinouts to change, features to dissapear, etc. with any upgrade We maintain a changelog that will notify you of significant changes Starting with version 1.0.0 the layout and features can be considered stable in a sense that they might be improved, but in a backward compatible way v0.2.0 \u00b6 This is the latest version and recommended: v0.2.0","title":"Download"},{"location":"download.html#download","text":"Warning We use semantic versioning . This means We believe the code is stable enough to be used for production everything before version 1.0.0 could be changed at any time without prior notice. You should expect pinouts to change, features to dissapear, etc. with any upgrade We maintain a changelog that will notify you of significant changes Starting with version 1.0.0 the layout and features can be considered stable in a sense that they might be improved, but in a backward compatible way","title":"Download"},{"location":"download.html#v020","text":"This is the latest version and recommended: v0.2.0","title":"v0.2.0"},{"location":"getting-started.html","text":"Getting started \u00b6 You need two parts to get the Tally Light operational: The Tally Lights themselves and the Hub that connects your video mixer and the Tallies. uses icons from the Noun Project by Eucalyp , Atif Arshad , Hrbon and ProSymbols , all licensed CC-BY-3.0 Things you need \u00b6 a trusted network that allows access via WiFi \u00b6 Your video mixer, the Hub and the Tallies need to be able to connect to each other. You should take care that there is a close and stable WiFi hotspot near your Tallies for obvious reasons. The network you are using should be trusted as all communication is unencrypted. The WiFi Chip supports IEEE 802.11 b/g/n and operates in the 2.4GHz frequency band. The Wifi network should support that as well. a computer to run the Hub on \u00b6 The application is rather light weight, so there are no special requirements here and it could run other applications in parallel. The Hub has a web interface for monitoring and configuration that can be shown on any browser that can connect to the computer. To keep latency to a minimum it would be perfect if this computer uses a wired connection. a NodeMcu ESP8266 \u00b6 This is an ESP8266 wifi chip on a development board that is typically used for IoT applications. As it is an Open Hardware project there are lots of different boards available. They mostly differ in price and form factor and are all fit for the project. But they all look similar to this: \"NodeMCU Amica\" by \"Make Magazin DE\", CC-BY-SA-4.0 !TODO: elaborate on different NodeMCUs! a piece of RGB LED strip \u00b6 It needs to be specified for 5V and have a common anode. Most LED strips that can be separated after every LED and have 4 pins should fulfill that requirement. I recommend taking one with 120LEDs per meter to not have the LEDS be spaced too much. an USB power source \u00b6 The whole setup draws far less than 200mA and can be powered via USB. Some cameras have USB outlets that you can use 200mA is little enough that even the smallest power bank can supply the Tally for hours use any old USB charger Setup \u00b6 Running the tally lights consists of two steps: Setup the Tally Light This means connecting the hardware and flashing the software onto it. Setup the Hub This is the piece of software that communicates with your video mixer and all connected Tallies and runs on any computer you provide. Download sources \u00b6 The latest releases can be found on github.com/wifi-tally . Setting up the Tally \u00b6 Connect the hardware \u00b6 All you need to do is connecting the LED strip to the NodeMCU board. Warning Do not connect more than 5 LEDs to the board! This will drain too much current through the board and potentially damaging it. board PIN strip PIN D3 B D2 R D1 G 3V3 + or +5V Info It is possible to connect the +5V pin of the LED strip to Vin on the board. But not all NodeMCU boards connect the PIN to the USB power supply and your LEDs would stay dark. It might also happen that you LED Strip does not work with a lower voltage of the 3.3V output. Typically this does not happen, but it could if you have an older strips. This is how the setup could look like on a breadboard. Separate Operator and Stage Light \u00b6 You can connect a second strip to use as an indicator for the speaker on stage. Connect the first LED as above and direct it in the direction of the camera operator. Then connect a second strip and let it face to the front of the camera. board PIN strip PIN D7 B D6 R D5 G 3V3 + or +5V This light will only show preview and live states, but not any error states. Prepare the NodeMCU Toolchain \u00b6 The NodeMCU documentation very nicely explains all the steps necessary to start a NodeMCU project . The documentation might seem overwhelming at first, but you only need to care of the two steps Flash Firmware, and Upload code Depending on your Operating System, you should select one \u2013 and only one \u2013 tool for each of these steps from the table . So either select NodeMCU PyFlasher or esptool.py to flash the firmware and follow their installation instruction. Similarly select ESPlorer or NodeMCU Tool to upload code and follow their installation instruction. Flash the firmware \u00b6 When everything is set up flash the firmware with the tool selected in the previous step. The firmware is the .bin file in the firmware folder. Upload Code \u00b6 Use the tool you have selected to upload the following files from the tally folder to the NodeMCU board: every file ending in .lc init.lua the tally-settings.ini described below tally-settings.ini This file configures your Tally. You can copy tally-settings.ini.example over and edit it as needed. setting name description station.ssid The name of the WiFi that the Tally should connect to station.password The password to connect to the WiFi. If the WiFi has no password, leave it empty. hub.ip The IP address the hub is running on tally.name How you want this tally to be labeled in the hub. This name needs to be unique amongst all tallies in your network. It must not be longer than 26 characters. Use of ASCII characters is recommended. For a list for all configuration values see tally-settings.ini Reference . Reboot the NodeMCU board by pressing the RST button on the board or disconnecting it from power briefly. Success If the LED strip starts blinking blue, this means you have correctly connected the hardware, flashed the firmware and uploaded the code. Well done! Setting up the hub \u00b6 The hub requires node.js to run. Packages for Linux, MacOS and even Windows are offered on the Download page . Get version 12 . Open the terminal of your operating system, enter the hub directory and run npm run start !TODO: explain environment variables! Point your browser to the IP of your computer on port 3000, for instance http://127.0.0.1:3000 if you are on the same machine. You should see a screen similar to this Your Tallies should also start popping up there. If not see the Troubleshooting Guide . Select Configuration in the navigation and configure the settings for your Video Mixer. Info Currently only ATEM video mixers are supported, but please open an issue if you want others to be supported too. It is really simple to integrate them and the only reason they have not been integrated yet, is that nobody has needed it already. :D Info If you want to try this at home and don't have a Video Mixer at hand you can run npm run dev instead. It features a Mock Video Mixer that randomly switches channels. Switch back to Tallies in the navigation and assign the video channels of the Video Mixer to the according tallies. Info The Tallies and their assigned channels are automatically saved in .wifi-tally.json in your home directory. So the configuration is restored when the Hub is restarted. Success Your Tallies should start showing green, when they are in Preview and red when they are in Program. Congratulations, you made it.","title":"Getting started"},{"location":"getting-started.html#getting-started","text":"You need two parts to get the Tally Light operational: The Tally Lights themselves and the Hub that connects your video mixer and the Tallies. uses icons from the Noun Project by Eucalyp , Atif Arshad , Hrbon and ProSymbols , all licensed CC-BY-3.0","title":"Getting started"},{"location":"getting-started.html#things-you-need","text":"","title":"Things you need"},{"location":"getting-started.html#a-trusted-network-that-allows-access-via-wifi","text":"Your video mixer, the Hub and the Tallies need to be able to connect to each other. You should take care that there is a close and stable WiFi hotspot near your Tallies for obvious reasons. The network you are using should be trusted as all communication is unencrypted. The WiFi Chip supports IEEE 802.11 b/g/n and operates in the 2.4GHz frequency band. The Wifi network should support that as well.","title":"a trusted network that allows access via WiFi"},{"location":"getting-started.html#a-computer-to-run-the-hub-on","text":"The application is rather light weight, so there are no special requirements here and it could run other applications in parallel. The Hub has a web interface for monitoring and configuration that can be shown on any browser that can connect to the computer. To keep latency to a minimum it would be perfect if this computer uses a wired connection.","title":"a computer to run the Hub on"},{"location":"getting-started.html#a-nodemcu-esp8266","text":"This is an ESP8266 wifi chip on a development board that is typically used for IoT applications. As it is an Open Hardware project there are lots of different boards available. They mostly differ in price and form factor and are all fit for the project. But they all look similar to this: \"NodeMCU Amica\" by \"Make Magazin DE\", CC-BY-SA-4.0 !TODO: elaborate on different NodeMCUs!","title":"a NodeMcu ESP8266"},{"location":"getting-started.html#a-piece-of-rgb-led-strip","text":"It needs to be specified for 5V and have a common anode. Most LED strips that can be separated after every LED and have 4 pins should fulfill that requirement. I recommend taking one with 120LEDs per meter to not have the LEDS be spaced too much.","title":"a piece of RGB LED strip"},{"location":"getting-started.html#an-usb-power-source","text":"The whole setup draws far less than 200mA and can be powered via USB. Some cameras have USB outlets that you can use 200mA is little enough that even the smallest power bank can supply the Tally for hours use any old USB charger","title":"an USB power source"},{"location":"getting-started.html#setup","text":"Running the tally lights consists of two steps: Setup the Tally Light This means connecting the hardware and flashing the software onto it. Setup the Hub This is the piece of software that communicates with your video mixer and all connected Tallies and runs on any computer you provide.","title":"Setup"},{"location":"getting-started.html#download-sources","text":"The latest releases can be found on github.com/wifi-tally .","title":"Download sources"},{"location":"getting-started.html#setting-up-the-tally","text":"","title":"Setting up the Tally"},{"location":"getting-started.html#connect-the-hardware","text":"All you need to do is connecting the LED strip to the NodeMCU board. Warning Do not connect more than 5 LEDs to the board! This will drain too much current through the board and potentially damaging it. board PIN strip PIN D3 B D2 R D1 G 3V3 + or +5V Info It is possible to connect the +5V pin of the LED strip to Vin on the board. But not all NodeMCU boards connect the PIN to the USB power supply and your LEDs would stay dark. It might also happen that you LED Strip does not work with a lower voltage of the 3.3V output. Typically this does not happen, but it could if you have an older strips. This is how the setup could look like on a breadboard.","title":"Connect the hardware"},{"location":"getting-started.html#separate-operator-and-stage-light","text":"You can connect a second strip to use as an indicator for the speaker on stage. Connect the first LED as above and direct it in the direction of the camera operator. Then connect a second strip and let it face to the front of the camera. board PIN strip PIN D7 B D6 R D5 G 3V3 + or +5V This light will only show preview and live states, but not any error states.","title":"Separate Operator and Stage Light"},{"location":"getting-started.html#prepare-the-nodemcu-toolchain","text":"The NodeMCU documentation very nicely explains all the steps necessary to start a NodeMCU project . The documentation might seem overwhelming at first, but you only need to care of the two steps Flash Firmware, and Upload code Depending on your Operating System, you should select one \u2013 and only one \u2013 tool for each of these steps from the table . So either select NodeMCU PyFlasher or esptool.py to flash the firmware and follow their installation instruction. Similarly select ESPlorer or NodeMCU Tool to upload code and follow their installation instruction.","title":"Prepare the NodeMCU Toolchain"},{"location":"getting-started.html#flash-the-firmware","text":"When everything is set up flash the firmware with the tool selected in the previous step. The firmware is the .bin file in the firmware folder.","title":"Flash the firmware"},{"location":"getting-started.html#upload-code","text":"Use the tool you have selected to upload the following files from the tally folder to the NodeMCU board: every file ending in .lc init.lua the tally-settings.ini described below tally-settings.ini This file configures your Tally. You can copy tally-settings.ini.example over and edit it as needed. setting name description station.ssid The name of the WiFi that the Tally should connect to station.password The password to connect to the WiFi. If the WiFi has no password, leave it empty. hub.ip The IP address the hub is running on tally.name How you want this tally to be labeled in the hub. This name needs to be unique amongst all tallies in your network. It must not be longer than 26 characters. Use of ASCII characters is recommended. For a list for all configuration values see tally-settings.ini Reference . Reboot the NodeMCU board by pressing the RST button on the board or disconnecting it from power briefly. Success If the LED strip starts blinking blue, this means you have correctly connected the hardware, flashed the firmware and uploaded the code. Well done!","title":"Upload Code"},{"location":"getting-started.html#setting-up-the-hub","text":"The hub requires node.js to run. Packages for Linux, MacOS and even Windows are offered on the Download page . Get version 12 . Open the terminal of your operating system, enter the hub directory and run npm run start !TODO: explain environment variables! Point your browser to the IP of your computer on port 3000, for instance http://127.0.0.1:3000 if you are on the same machine. You should see a screen similar to this Your Tallies should also start popping up there. If not see the Troubleshooting Guide . Select Configuration in the navigation and configure the settings for your Video Mixer. Info Currently only ATEM video mixers are supported, but please open an issue if you want others to be supported too. It is really simple to integrate them and the only reason they have not been integrated yet, is that nobody has needed it already. :D Info If you want to try this at home and don't have a Video Mixer at hand you can run npm run dev instead. It features a Mock Video Mixer that randomly switches channels. Switch back to Tallies in the navigation and assign the video channels of the Video Mixer to the according tallies. Info The Tallies and their assigned channels are automatically saved in .wifi-tally.json in your home directory. So the configuration is restored when the Hub is restarted. Success Your Tallies should start showing green, when they are in Preview and red when they are in Program. Congratulations, you made it.","title":"Setting up the hub"},{"location":"protocol.html","text":"","title":"Protocol"},{"location":"tally.html","text":"Tally \u00b6 tally-settings.ini Reference \u00b6 setting name default description station.ssid (required) The name of the WiFi that the Tally should connect to station.password (none) The password to connect to the WiFi. If the WiFi has no password, leave it empty. hub.ip (required) The IP address the hub is running on hub.port 7411 The port where the hub listens. tally.name (chip id) How you want this tally to be labeled in the hub. This name needs to be unique amongst all tallies in your network. It must not be longer than 26 characters. Use of ASCII characters is recommended. operator.type grb+ How the pins for the operator light are driven. Use grb+ when a high state signalizes off and grb- when a low state signalizes off . operator.ws2812 5 Number of WS2812 like LEDs in a strip that serve as operator lights. Has to be a number between 0 and 10 . The operator lights are the first in the strip, followed by the stage lights. stage.type grb+ How the pins for the stage light are driven. Use grb+ when a high state signalizes off and grb- when a low state signalizes off . stage.ws2812 0 Number of WS2812 like LEDs in a strip that serve as stage lights. Has to be a number between 0 and 10 . The stage lights come right after the operator lights in the strip. Using WS2812, NeoPixel, etc \u00b6 WS2812-compatible LED strips come with many names. Most common are WS2812b and NeoPixel . If you have anything that says it is compatible with either of those, it will probably work. Connect the strip to pin D4 , the +5V and GND respectively. By default the first 5 pixels in the strip will work as Operator Lights, the others stay dark. The number of LEDs you want to use as Operator Lights and Stage Lights can be configured in tally-settings.ini with the operator.ws2812 and stage.ws2812 settings. In the example above, the correct configuration to drive 4 Operator Lights and 4 Stage Lights would be operator.ws2812 = 4 stage.ws2812 = 4 Order of LED lights When wiring, please note, that the Operator Lights always come before the Stage Lights. It is also possible to combine WS2812 strips and RGB Leds in one setup as all pins are driven simultaneously. You could, for instance use a single RGB LED as the operator light and a WS2812 strip for the stage light. The configuration for this example would be operator.ws2812 = 0 stage.ws2812 = 4 Using LEDs with common cathode \u00b6 You can use an LED with a common cathode with the tally. First connect the common pin to GND instead of 3V3 and then configure tally-settings.ini to drive the pins correctly. If you skip this step the colors that should be on are off, and vice versa. operator.type = grb- stage.type = grb- You can also mix different RGB Led types for the Operator and Stage Light.","title":"Tally"},{"location":"tally.html#tally","text":"","title":"Tally"},{"location":"tally.html#tally-settingsini-reference","text":"setting name default description station.ssid (required) The name of the WiFi that the Tally should connect to station.password (none) The password to connect to the WiFi. If the WiFi has no password, leave it empty. hub.ip (required) The IP address the hub is running on hub.port 7411 The port where the hub listens. tally.name (chip id) How you want this tally to be labeled in the hub. This name needs to be unique amongst all tallies in your network. It must not be longer than 26 characters. Use of ASCII characters is recommended. operator.type grb+ How the pins for the operator light are driven. Use grb+ when a high state signalizes off and grb- when a low state signalizes off . operator.ws2812 5 Number of WS2812 like LEDs in a strip that serve as operator lights. Has to be a number between 0 and 10 . The operator lights are the first in the strip, followed by the stage lights. stage.type grb+ How the pins for the stage light are driven. Use grb+ when a high state signalizes off and grb- when a low state signalizes off . stage.ws2812 0 Number of WS2812 like LEDs in a strip that serve as stage lights. Has to be a number between 0 and 10 . The stage lights come right after the operator lights in the strip.","title":"tally-settings.ini Reference"},{"location":"tally.html#using-ws2812-neopixel-etc","text":"WS2812-compatible LED strips come with many names. Most common are WS2812b and NeoPixel . If you have anything that says it is compatible with either of those, it will probably work. Connect the strip to pin D4 , the +5V and GND respectively. By default the first 5 pixels in the strip will work as Operator Lights, the others stay dark. The number of LEDs you want to use as Operator Lights and Stage Lights can be configured in tally-settings.ini with the operator.ws2812 and stage.ws2812 settings. In the example above, the correct configuration to drive 4 Operator Lights and 4 Stage Lights would be operator.ws2812 = 4 stage.ws2812 = 4 Order of LED lights When wiring, please note, that the Operator Lights always come before the Stage Lights. It is also possible to combine WS2812 strips and RGB Leds in one setup as all pins are driven simultaneously. You could, for instance use a single RGB LED as the operator light and a WS2812 strip for the stage light. The configuration for this example would be operator.ws2812 = 0 stage.ws2812 = 4","title":"Using WS2812, NeoPixel, etc"},{"location":"tally.html#using-leds-with-common-cathode","text":"You can use an LED with a common cathode with the tally. First connect the common pin to GND instead of 3V3 and then configure tally-settings.ini to drive the pins correctly. If you skip this step the colors that should be on are off, and vice versa. operator.type = grb- stage.type = grb- You can also mix different RGB Led types for the Operator and Stage Light.","title":"Using LEDs with common cathode"},{"location":"troubleshooting.html","text":"Troubleshooting \u00b6 The Troubleshooting Guide lists a few common symptoms and possible ways to resolve them. The hints are usually ordered from most likely to least likely. After powering the Tally the LED strip stays dark \u00b6 If the LED strip started flashing blue before turning black, see below . Is the Tally really powered? Is your battery pack empty? Could the connector cable be broken? Did you upload all files to the Tally? Is the LED strip correctly wired? Is the LED strip working? Try to connect it to a 5V power source directly. Are you using an LED strip with common cathode? Connect the common pin to GND and do the necessary configuration . Is the NodeMCU working? Try to connect to it via USB In case you are developing the Tally Code: It is normal the strip stays black, because the init.lua file is not uploaded. The LED strip started flashing blue for a while but then turned black \u00b6 The Tally should usually recover from any errors and reboot automatically. But you could try reconnecting it to its power source to reboot it The Stage Light stays black when the Tally is not patched in the Hub or not currently on Preview or Program on the Video Mixer. So this could be totally normal. The Tally slowly blinks blue for an extended amount of time \u00b6 This indicates issues when trying to connect to your WiFi. It is perfectly normal to see this during boot up for a few seconds, but it should not sustain for long. Is your WiFi up? Is the signal strong enough near the tally? Did you configure the WiFi name and its credentials correctly in tally-settings.ini ? Connect to the Tally via USB. It should log an error code why the connection failed. The error codes are explained in the NodeMCU documentation . The Tally blinks blue quickly for an extended amount of time \u00b6 This means the Tally has connected to your WiFi and is waiting to get an IP address. It is perfectly normal to see this during boot up for a seconds, but it should not sustain for long. This very likely points to an issue with your WiFi configuration. Does your WiFi run DHCP? Are there enough free addresses that your WiFi router could issue? The Tally blinks blue twice \u00b6 This indicates that the Tally can not connect to the hub. Is the hub running? Is the hubs IP correctly configured in tally-settings.ini ? Did the IP address of the computer running the hub change? Could there be a firewall blocking traffic between the Tally and the hub? Communication runs on port 7411 by default. The Tally blinks blue three times \u00b6 This happens when the tally-settings.ini file does not exist or is invalid. Did you flash the tally-settings.ini on the Tally? Does the tally-settings.ini include all mandatory settings? Try configuring \"wrong\" settings that won't work. But this way, you should get a different error and rule out that keys where mistyped. The Tally blinks blue occasionally \u00b6 This indicates that the tally is connected to the hub, but the hub does not know which signal the tally should show. Did the hub connect to your Video Mixer? The colors on the LEDs are messed up \u00b6 Is the wiring correct? It is not unheared of, that the pins of LEDs are not labeled correctly. Maybe switch them around. If the colors that should be on are off and vice versa, you probably use an LED with common cathode. See the tally documentation how to fix it. The Hub can not connect to ATEM video mixer \u00b6 Are you really sure the settings are correct? If yes read further. Every ATEM mixer has a maximum of connections that it allows at the same time \u2013 the Internet talks of 3-5 connections depending on the model. You might be running into this issue. To verify this as the cause identify all other software / hardware that connects to the Video Mixer, restart it and make sure the Tally Hub is the first thing to connect. The way to fix it is very dependent on your setup. See if you can dispense of any software / hardware connecting to ATEM.","title":"Troubleshooting"},{"location":"troubleshooting.html#troubleshooting","text":"The Troubleshooting Guide lists a few common symptoms and possible ways to resolve them. The hints are usually ordered from most likely to least likely.","title":"Troubleshooting"},{"location":"troubleshooting.html#after-powering-the-tally-the-led-strip-stays-dark","text":"If the LED strip started flashing blue before turning black, see below . Is the Tally really powered? Is your battery pack empty? Could the connector cable be broken? Did you upload all files to the Tally? Is the LED strip correctly wired? Is the LED strip working? Try to connect it to a 5V power source directly. Are you using an LED strip with common cathode? Connect the common pin to GND and do the necessary configuration . Is the NodeMCU working? Try to connect to it via USB In case you are developing the Tally Code: It is normal the strip stays black, because the init.lua file is not uploaded.","title":"After powering the Tally the LED strip stays dark"},{"location":"troubleshooting.html#the-led-strip-started-flashing-blue-for-a-while-but-then-turned-black","text":"The Tally should usually recover from any errors and reboot automatically. But you could try reconnecting it to its power source to reboot it The Stage Light stays black when the Tally is not patched in the Hub or not currently on Preview or Program on the Video Mixer. So this could be totally normal.","title":"The LED strip started flashing blue for a while but then turned black"},{"location":"troubleshooting.html#the-tally-slowly-blinks-blue-for-an-extended-amount-of-time","text":"This indicates issues when trying to connect to your WiFi. It is perfectly normal to see this during boot up for a few seconds, but it should not sustain for long. Is your WiFi up? Is the signal strong enough near the tally? Did you configure the WiFi name and its credentials correctly in tally-settings.ini ? Connect to the Tally via USB. It should log an error code why the connection failed. The error codes are explained in the NodeMCU documentation .","title":"The Tally slowly blinks blue for an extended amount of time"},{"location":"troubleshooting.html#the-tally-blinks-blue-quickly-for-an-extended-amount-of-time","text":"This means the Tally has connected to your WiFi and is waiting to get an IP address. It is perfectly normal to see this during boot up for a seconds, but it should not sustain for long. This very likely points to an issue with your WiFi configuration. Does your WiFi run DHCP? Are there enough free addresses that your WiFi router could issue?","title":"The Tally blinks blue quickly for an extended amount of time"},{"location":"troubleshooting.html#the-tally-blinks-blue-twice","text":"This indicates that the Tally can not connect to the hub. Is the hub running? Is the hubs IP correctly configured in tally-settings.ini ? Did the IP address of the computer running the hub change? Could there be a firewall blocking traffic between the Tally and the hub? Communication runs on port 7411 by default.","title":"The Tally blinks blue twice"},{"location":"troubleshooting.html#the-tally-blinks-blue-three-times","text":"This happens when the tally-settings.ini file does not exist or is invalid. Did you flash the tally-settings.ini on the Tally? Does the tally-settings.ini include all mandatory settings? Try configuring \"wrong\" settings that won't work. But this way, you should get a different error and rule out that keys where mistyped.","title":"The Tally blinks blue three times"},{"location":"troubleshooting.html#the-tally-blinks-blue-occasionally","text":"This indicates that the tally is connected to the hub, but the hub does not know which signal the tally should show. Did the hub connect to your Video Mixer?","title":"The Tally blinks blue occasionally"},{"location":"troubleshooting.html#the-colors-on-the-leds-are-messed-up","text":"Is the wiring correct? It is not unheared of, that the pins of LEDs are not labeled correctly. Maybe switch them around. If the colors that should be on are off and vice versa, you probably use an LED with common cathode. See the tally documentation how to fix it.","title":"The colors on the LEDs are messed up"},{"location":"troubleshooting.html#the-hub-can-not-connect-to-atem-video-mixer","text":"Are you really sure the settings are correct? If yes read further. Every ATEM mixer has a maximum of connections that it allows at the same time \u2013 the Internet talks of 3-5 connections depending on the model. You might be running into this issue. To verify this as the cause identify all other software / hardware that connects to the Video Mixer, restart it and make sure the Tally Hub is the first thing to connect. The way to fix it is very dependent on your setup. See if you can dispense of any software / hardware connecting to ATEM.","title":"The Hub can not connect to ATEM video mixer"}]}